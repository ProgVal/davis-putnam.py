#!/usr/bin/env python3

import sys

from satsolver import parser
from satsolver import structures
from satsolver import davis_putnam

def handle_args(keys):
    args = list(sys.argv) # Shallow copy
    values = {}
    for key in keys:
        if '--'+key in args[1:]:
            values[key] = True
            args.remove('--'+key)
        else:
            values[key] = False
    if len(args) > 2:
        print('Syntax: %s %s file.cnf' % (sys.argv[0],
            ' '.join(map(lambda key:'[--%s]'%key, keys))))
        exit()
    elif len(args) == 2:
        return (values, args[1])
    else:
        return (values, None)

def main():
    (options, filename) = handle_args(['verbose', 'remove-duplicates', 'caching'])
    davis_putnam.REMOVE_DUPLICATES = options['remove-duplicates']
    davis_putnam.VERBOSE = options['verbose']
    structures.CACHING = options['caching']
    if filename:
        with open(filename) as fd:
            system = parser.parse(fd)
    else:
        system = parser.parse(sys.stdin)
    try:
        solution = davis_putnam.solve(system)
    except davis_putnam.NotSatisfiable as e:
        print('s UNSATISFIABLE')
    except davis_putnam.UnknownSatisfiability:
        print('s ???')
    else:
        if options['verbose']:
            print('')
        print('s SATISFIABLE')
        for (i, v) in enumerate(solution):
            if i == 0:
                continue
            else:
                print('v %s%i' % (('' if v else '-'), i))

if __name__ == '__main__':
    main()
